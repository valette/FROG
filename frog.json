{
	"dataDirs" : {
		"FROG" : {
			"path" : "./js",
			"hidden" : true
		}
	},

	"init" : [
		"FROG/lib/laplaceSolver.js",
		"FROG/lib/LSRegistration.js",
		"FROG/lib/TextSpriteHelper.js",
		"FROG/lib/FROG.js"
	],

	"actions": {
		"transformPoints" : {
			"parameters" : [
				{
					"name" : "inputPoints",
					"type" : "file",
					"required" : true
				},
				{
					"name" : "transform",
					"type" : "file",
					"required" : true
				}
			],
			"dependencies" : [
				"tools/transformIO.py"
			],
			"engine" : "python",
			"executable" : "tools/transformPoints.py"
		},
		"dummyVolumeGenerator" : {
			"parameters" : [
				{
					"name" : "boundingBox",
					"type" : "file",
					"required" : true
				},
				{
					"name" : "spacing",
					"type" : "float",
					"required" : true
				}
			],
			"executable" : "bin/DummyVolumeGenerator"
		},
		"labelContour" : {
			"parameters" : [
				{
					"name" : "inputVolume",
					"type" : "file",
					"required" : true
				}
			],
			"executable" : "tools/labelContour.py",
			"engine" : "python"
		},
		"checkerBoard" : {
			"parameters" : [
				{
					"name" : "inputVolume",
					"type" : "file",
					"required" : true
				}
			],
			"executable" : "tools/checkerBoard.py",
			"engine" : "python"
		},
		"createGrid" : {

			"parameters" : [
				{
					"name" : "inputVolume",
					"type" : "file",
					"required" : true
				}
			],
			"executable" : "tools/grid.py",
			"engine" : "python"
		},
		"frog" : {
			"parameters" : [
				{
					"name" : "inputPairs",
					"required" : true,
					"type" : "file"
				},
				{
					"prefix" : "-si ",
					"name" : "statsInterval",
					"type" : "int"
				},
				{
					"prefix" : "-di ",
					"name" : "deformableIterations",
					"type" : "int"
				},
				{
					"prefix" : "-dl ",
					"name" : "deformableLevels",
					"type" : "int"
				},
				{
					"prefix" : "-da ",
					"name" : "deformableAlpha",
					"type" : "float"
				},
				{
					"prefix" : "-g ",
					"name" : "initialGridSize",
					"type" : "float"
				},
				{
					"prefix" : "-l ",
					"name" : "landmarks",
					"type" : "directory"
				},
				{
					"prefix" : "-li ",
					"name" : "linearIterations",
					"type" : "int"
				},
				{
					"prefix" : "-dstats ",
					"name" : "displayStats",
					"type" : "int"
				},
				{
					"prefix" : "-dlinear ",
					"name" : "displayLinear",
					"type" : "int"
				},
				{
					"prefix" : "-t ",
					"name" : "inlierThreshold",
					"type" : "float"
				}
			],
			"executable" : "bin/frog"
		},
		"match" : {
			"parameters" : [
				{
					"name" : "inputFile",
					"required" : true,
					"type" : "file"
				},
				{
					"name" : "numberOfVolumes",
					"type" : "int",
					"prefix" : "-n "
				},
				{
					"name" : "numberOfThreads",
					"type" : "int",
					"prefix" : "-nt "
				},
				{

					"name" : "numberOfPointsPerImage",
					"type" : "int",
					"prefix" : "-np "

				},
				{

					"name" : "responseThreshold",
					"type" : "float",
					"prefix" : "-sp "

				},
				{

					"name" : "distance",
					"type" : "float",
					"prefix" : "-d "

				},
				{

					"name" : "all",
					"type" : "int",
					"prefix" : "-all "

				},
				{

					"name" : "distanceToSecond",
					"type" : "float",
					"prefix" : "-d2 "

				},
				{

					"name" : "zMin",
					"type" : "float",
					"prefix" : "-zmin "

				},
				{

					"name" : "zMax",
					"type" : "float",
					"prefix" : "-zmax "

				},
				{
					"text" : "-o pairs.bin"
				}

			],
			"output" : {
				"pairs" : "pairs.bin"
			},

			"executable" : "bin/match"

		},
		"MeshTransform" : {

			"parameters" : [
				{
					"name" : "source",
					"type" : "file",
					"required" : true
				},
				{
					"name" : "transform",
					"prefix" : "-t ",
					"type" : "file"
				},
				{
					"name" : "inverseTransform",
					"prefix" : "-ti ",
					"type" : "file"
				}
			],
			"executable" : "bin/MeshTransform"
		},
		"trimTransform" : {

			"parameters" : [
				{
					"name" : "transform",
					"type" : "file",
					"required" : true
				},
				{
					"name" : "numberOfLevels",
					"type" : "int"
				}
			],
			"executable" : "tools/trimTransform.py",
			"engine" : "python"
		},
		"VolumeTransform" : {

			"parameters" : [
				{
					"name" : "source",
					"type" : "file",
					"required" : true
				},
				{
					"name" : "reference",
					"type" : "file",
					"required" : true
				},
				{
					"name" : "transform",
					"prefix" : "-t ",
					"type" : "file"
				},
				{
					"name" : "outputFileName",
					"prefix" : "-o ",
					"type" : "string"
				},
				{
					"name" : "inverseTransform",
					"prefix" : "-ti ",
					"type" : "file"
				},
				{
					"name" : "interpolation",
					"prefix" : "-i ",
					"type" : "int"
				},
				{
					"name" : "invertX",
					"prefix" : "-rx ",
					"type" : "int"
				},
				{
					"name" : "backGroundLevel",
					"prefix" : "-b ",
					"type" : "float"
				}
			],
			"executable" : "bin/VolumeTransform"
		},
		"SURF3D": {
			"parameters": [
				{
					"name": "inputVolume",
					"aliases" : [ "input_volume" ],
					"type": "file",
					"required": true
				},
				{
					"prefix": "-type ",
					"name" : "type",
					"type": "int",
					"description" : "desccriptor type : 0 for SURF, 1 for raw sub volumes"
				},
				{
					"prefix": "-n ",
					"name" : "numberOfPoints",
					"type": "int",
					"description" : "maxium number of points to extract"
				},
				{
					"prefix": "-s ",
					"name" : "spacing",
					"aliases": [ "target_spacing" ],
					"type": "float"
				},
				{
					"prefix": "-d ",
					"name": "maximum_dimension",
					"type": "int"
				},
				{
					"prefix": "-t ",
					"name": "threshold",
					"type": "float"
				},
				{
					"prefix": "-m ",
					"name": "mask",
					"type": "file"
				},
				{
					"prefix": "-json ",
					"name": "writeJSON",
					"type": "int"
				},
				{
					"prefix": "-bin ",
					"name": "writeBIN",
					"type": "int"
				},
				{
					"prefix": "-csv ",
					"name": "writeCSV",
					"type": "int"
				},
				{
					"prefix": "-csvgz ",
					"name": "writeCSVGZ",
					"type": "int"
				},
				{
					"prefix": "-r ",
					"name": "radius",
					"type": "int"
				},
				{

					"name" : "outputFileName",
					"type" : "string",
					"prefix" : "-o "

				}
			],
			"output" : {
				"points" : "points.csv.gz"
			},
			"executable": "bin/surf3d"
		},
		"MATCH3D": {
			"parameters": [
				{
					"name": "input_volume1",
					"type": "file",
					"required": true
				},
				{
					"name": "input_volume2",
					"type": "file",
					"required": true
				},
				{
					"prefix": "-Rd ",
					"name": "RansacDist",
					"type": "float"
				},
				{
					"prefix": "-Ri ",
					"name": "RansacMinInliers",
					"type": "int"
				},
				{
					"prefix": "-Md ",
					"name": "MatchingDist",
					"type": "float"
				},
				{
					"prefix": "-Md2 ",
					"name": "MatchingDist2Second",
					"type": "float"
				},
				{
					"prefix": "-Ms ",
					"name": "MatchingScale",
					"type": "float"
				},
				{
					"prefix": "-b ",
					"name": "ComputeBoundingBoxes",
					"type": "int"
				},
				{
					"prefix": "-bb ",
					"name": "BoundingBox",
					"type": "string"
				},
				{
					"prefix": "-i ",
					"name": "writeInliers",
					"type": "flag"
				}
			],
			"executable": "bin/match3d"
		},
		"averageVolumes": {
			"parameters": [
				{
					"name": "inputVolumes",
					"type": "fileArray",
					"required": true
				}
			],
			"executable": "bin/AverageVolumes"
		},
		"LSRegistration" : {
			"parameters": [
				{
					"name": "files",
					"type": "file",
					"required": true
				}
			],
			"executable": "js/bin/LSRegistration.js",
			"dependencies" : [
				"SURF3D",
				"MATCH3D",
				"js/lib/LSRegistration.js",
				"js/lib/laplaceSolver.js",
				"js/lib/TextSpriteHelper.js",
				"js/lib/vtkOpenSURF.js"
			]
		}

	}
}
